/*! ngs3upload 27-04-2017 */
!function(a,b){angular.module("ngS3upload.config",[]).value("ngS3upload.config",{debug:!0}).config(["$compileProvider",function(a){angular.isDefined(a.urlSanitizationWhitelist)?a.urlSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|data):/):a.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|data):/)}]),angular.module("ngS3upload.directives",[]),angular.module("ngS3upload",["ngS3upload.config","ngS3upload.directives","ngS3upload.services","ngSanitize"]),angular.module("ngS3upload.services",[]).service("S3Uploader",["$http","$q","$window",function(a,b,c){this.uploads=0;var d=this;this.getUploadOptions=function(c){var d=b.defer();return a.get(c).then(function(a,b){d.resolve(a)},function(a,b){d.reject(a)}),d.promise},this.randomString=function(a){for(var b="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",c="",d=a;d>0;--d)c+=b[Math.round(Math.random()*(b.length-1))];return c},this.upload=function(a,c,e,f,g,h,i,j,k){function l(b){a.$apply(function(){b.lengthComputable?a.progress=Math.round(100*b.loaded/b.total):a.progress="unable to compute","function"==typeof p.notify&&p.notify({type:"progress",value:a.progress})})}function m(b){r.status>=200&&r.status<300?a.$apply(function(){d.uploads--,a.uploading=!1,a.success=!0,p.resolve()}):n(b)}function n(b){a.$apply(function(){a.messageText="Upload failed with status "+r.status,d.uploads--,a.uploading=!1,a.success=!1,p.reject()})}function o(b){a.$apply(function(){d.uploads--,a.uploading=!1,a.success=!1,p.reject()})}var p=b.defer();a.attempt=!0;var q=new FormData;q.append("key",e),q.append("acl",f),q.append("Content-Type",k.type),q.append("AWSAccessKeyId",h),q.append("policy",i),q.append("signature",j),q.append("file",k);var r=new XMLHttpRequest;return r.upload.addEventListener("progress",l,!1),r.addEventListener("load",m,!1),r.addEventListener("error",n,!1),r.addEventListener("abort",o,!1),a.uploading=!0,this.uploads++,r.open("POST",c,!0),r.send(q),p.promise},this.isUploading=function(){return this.uploads>0}}]),angular.module("ngS3upload.directives",[]).directive("s3Upload",["$parse","S3Uploader",function(a,b){return{restrict:"AC",require:"?ngModel",replace:!0,transclude:!1,scope:!0,controller:["$scope","$element","$attrs","$transclude",function(a,b,c,d){a.attempt=!1,a.success=!1,a.uploading=!1,a.barClass=function(){return{"bar-success":a.attempt&&!a.uploading&&a.success}}}],compile:function(a,c,d){return{pre:function(a,b,c){if(angular.isUndefined(c.bucket))throw Error("bucket is a mandatory attribute")},post:function(a,c,d,e){var f=angular.extend({},a.$eval(d.s3UploadOptions||d.options));f=angular.extend({submitOnChange:!0,getOptionsUri:"/getS3Options",acl:"public-read",uploadingKey:"uploading",folder:""},f);var g=d.bucket,h=angular.element(c.children()[0]),i=angular.element(c.find("input")[0]);h.bind("click",function(a){i[0].click()}),e.$render=function(){a.filename=e.$viewValue};var j=function(){var c=i[0].files[0],d=c.name;a.$apply(function(){b.getUploadOptions(f.getOptionsUri).then(function(h){e.$setValidity("uploading",!1);var i="https://"+g+".s3.amazonaws.com/",j=f.folder+b.randomString(16)+"-"+(new Date).getTime()+"-"+d;b.upload(a,i,j,f.acl,c.type,h.key,h.policy,h.signature,c).then(function(){e.$setViewValue(i+j),a.filename=e.$viewValue,e.$setValidity("uploading",!0),e.$setValidity("succeeded",!0)},function(){a.filename=e.$viewValue,e.$setValidity("uploading",!0),e.$setValidity("succeeded",!1)})},function(a){throw Error("Can't receive the needed options for S3 "+a)})})};c.bind("change",function(a){f.submitOnChange&&j()})}}},template:'<div class="upload-wrap"><button class="btn btn-primary" type="button"><span ng-if="!filename">Choose file</span><span ng-if="filename">Replace file</span></button><a ng-href="{{ filename  }}" target="_blank" class="" ng-if="filename" > Stored file </a> <span class="text-error strong">{{messageText}}</span><div class="progress progress-striped" ng-class="{active: uploading}" ng-show="attempt" style="margin-top: 10px"><div class="bar" style="width: {{ progress }}%;" ng-class="barClass()"></div></div><input type="file" style="display: none"/></div>'}}])}(window,document);